

clean_data <-
  unglue_data(input, "{call} {value}", convert = TRUE) %>%
  mutate(passes = 0)

step <- i <- 1
passes <- 0
glob <- 0
repeat {
  passes <- clean_data[i, "passes"] + 1
  clean_data[i, "passes"] <- passes
  if(passes == 2) break
  clean_data[i, "step"] <- step
  step <- step + 1

  call  <- clean_data[i, "call"]
  value <- clean_data[i, "value"]
  if(call == "acc") {
    glob <- glob + value
    i <- i + 1
  } else if(call == "jmp") {
    i <- i + value
  } else {
    i <- i + 1
  }
}
glob

# part 2

clean_data <-
  unglue_data(input, "{call} {value}", convert = TRUE) %>%
  mutate(passes = 0)


test_code <- function(clean_data) {
  step <- i <- 1
  passes <- 0
  glob <- 0
  repeat {
    passes <- clean_data[i, "passes"] + 1
    clean_data[i, "passes"] <- passes
    if(passes == 2) return(NULL)
    clean_data[i, "step"] <- step
    step <- step + 1

    call  <- clean_data[i, "call"]
    value <- clean_data[i, "value"]
    if(call == "acc") {
      glob <- glob + value
      i <- i + 1
    } else if(call == "jmp") {
      i <- i + value
    } else {
      i <- i + 1
    }
    if(i == nrow(clean_data)) return(glob)
  }
}

for (j in seq(nrow(clean_data))) {
  call  <- clean_data[j, "call"]
  clean_data_modif <- clean_data
  if(call == "nop") {
    clean_data_modif[j, "call"] <- "jmp"
    res <- test_code(clean_data_modif)
    if(!is.null(res)) break
  } else   if(call == "jmp") {
    clean_data_modif[j, "call"] <- "nop"
    res <- test_code(clean_data_modif)
    if(!is.null(res)) break
  }
}
res # 1245

for(i in 1:10){
  break
}
